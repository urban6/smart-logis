/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2020-11-03 05:49:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.taxi.user.signUp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import kr.co.shovvel.dm.common.Consts;

public final class signUp_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"/>\n");
      out.write("    <title>모두 고고해 : 회원가입</title>\n");
      out.write("\n");
      out.write("    <meta content=\"user-scalable=no, width=device-width, height=device-height, initial-scale=1.0, maximum-scale=1.0\"\n");
      out.write("          name=\"viewport\">\n");
      out.write("\n");
      out.write("    ");
      out.write("\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\"\n");
      out.write("          integrity=\"sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z\" crossorigin=\"anonymous\">\n");
      out.write("    <script src=\"/assets/libs/jquery/dist/jquery.min.js\"></script>\n");
      out.write("    <script src=\"/assets/libs/bootstrap/dist/js/bootstrap.min.js\"></script>\n");
      out.write("\n");
      out.write("    ");
      out.write("\n");
      out.write("    <link rel=\"stylesheet\" href=\"/css/reset.css\">\n");
      out.write("\n");
      out.write("    ");
      //  c:set
      org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/views/taxi/user/signUp/signUp.jsp(30,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("SUCCESS");
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_eval_c_005fset_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        if (_jspx_eval_c_005fset_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.pushBody();
          _jspx_th_c_005fset_005f0.setBodyContent((javax.servlet.jsp.tagext.BodyContent) out);
          _jspx_th_c_005fset_005f0.doInitBody();
        }
        do {
          out.print(Consts.SIGN_UP.SUCCESS);
          out.write("\n");
          out.write("    ");
          int evalDoAfterBody = _jspx_th_c_005fset_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
        if (_jspx_eval_c_005fset_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.popBody();
        }
      }
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        _005fjspx_005ftagPool_005fc_005fset_0026_005fvar.reuse(_jspx_th_c_005fset_005f0);
        return;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar.reuse(_jspx_th_c_005fset_005f0);
      out.write("\n");
      out.write("    ");
      //  c:set
      org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f1 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
      _jspx_th_c_005fset_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f1.setParent(null);
      // /WEB-INF/views/taxi/user/signUp/signUp.jsp(32,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setVar("FAIL");
      int _jspx_eval_c_005fset_005f1 = _jspx_th_c_005fset_005f1.doStartTag();
      if (_jspx_eval_c_005fset_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        if (_jspx_eval_c_005fset_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.pushBody();
          _jspx_th_c_005fset_005f1.setBodyContent((javax.servlet.jsp.tagext.BodyContent) out);
          _jspx_th_c_005fset_005f1.doInitBody();
        }
        do {
          out.print(Consts.SIGN_UP.FAIL);
          out.write("\n");
          out.write("    ");
          int evalDoAfterBody = _jspx_th_c_005fset_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
        if (_jspx_eval_c_005fset_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.popBody();
        }
      }
      if (_jspx_th_c_005fset_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        _005fjspx_005ftagPool_005fc_005fset_0026_005fvar.reuse(_jspx_th_c_005fset_005f1);
        return;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar.reuse(_jspx_th_c_005fset_005f1);
      out.write("\n");
      out.write("    ");
      //  c:set
      org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f2 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
      _jspx_th_c_005fset_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f2.setParent(null);
      // /WEB-INF/views/taxi/user/signUp/signUp.jsp(34,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f2.setVar("CERT_FAIL");
      int _jspx_eval_c_005fset_005f2 = _jspx_th_c_005fset_005f2.doStartTag();
      if (_jspx_eval_c_005fset_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        if (_jspx_eval_c_005fset_005f2 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.pushBody();
          _jspx_th_c_005fset_005f2.setBodyContent((javax.servlet.jsp.tagext.BodyContent) out);
          _jspx_th_c_005fset_005f2.doInitBody();
        }
        do {
          out.print(Consts.SIGN_UP.CERT_FAIL);
          out.write("\n");
          out.write("    ");
          int evalDoAfterBody = _jspx_th_c_005fset_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
        if (_jspx_eval_c_005fset_005f2 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.popBody();
        }
      }
      if (_jspx_th_c_005fset_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        _005fjspx_005ftagPool_005fc_005fset_0026_005fvar.reuse(_jspx_th_c_005fset_005f2);
        return;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar.reuse(_jspx_th_c_005fset_005f2);
      out.write("\n");
      out.write("    ");
      //  c:set
      org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f3 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
      _jspx_th_c_005fset_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f3.setParent(null);
      // /WEB-INF/views/taxi/user/signUp/signUp.jsp(36,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f3.setVar("DUPLICATED");
      int _jspx_eval_c_005fset_005f3 = _jspx_th_c_005fset_005f3.doStartTag();
      if (_jspx_eval_c_005fset_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        if (_jspx_eval_c_005fset_005f3 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.pushBody();
          _jspx_th_c_005fset_005f3.setBodyContent((javax.servlet.jsp.tagext.BodyContent) out);
          _jspx_th_c_005fset_005f3.doInitBody();
        }
        do {
          out.print(Consts.SIGN_UP.DUPLICATED);
          out.write("\n");
          out.write("    ");
          int evalDoAfterBody = _jspx_th_c_005fset_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
        if (_jspx_eval_c_005fset_005f3 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.popBody();
        }
      }
      if (_jspx_th_c_005fset_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        _005fjspx_005ftagPool_005fc_005fset_0026_005fvar.reuse(_jspx_th_c_005fset_005f3);
        return;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar.reuse(_jspx_th_c_005fset_005f3);
      out.write("\n");
      out.write("\n");
      out.write("    <script>\n");
      out.write("        $(document).on(\"keyup\", \"phoneNumber\", function () {\n");
      out.write("            $(this).val($(this).val().replace(/[^0-9]/g, \"\").replace(/(^02|^0505|^1[0-9]{3}|^0[0-9]{2})([0-9]+)?([0-9]{4})$/, \"$1-$2-$3\").replace(\"--\", \"-\"));\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        $(document).ready(function () {\n");
      out.write("            // 인증번호 받기 버튼 클릭\n");
      out.write("            $(\"#btnRequestCert\").click(function (key) {\n");
      out.write("                // 휴대폰 정규식을 만족했을 때, 인증 번호를 요청한다.\n");
      out.write("                if (phoneFormat()) {\n");
      out.write("                    const phoneNumber = $(\"#phoneNumber\").val();\n");
      out.write("                    reqeustCertification(phoneNumber);\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("\n");
      out.write("            // 가입하기 버튼 클릭\n");
      out.write("            $(\"#btnSignUp\").click(function (key) {\n");
      out.write("                // 1. 휴대폰번호 정규식 확인\n");
      out.write("                if (phoneFormat()) {\n");
      out.write("                    // 2. 인증번호를 입력 확인\n");
      out.write("                    if ($(\"#certNumber\").val().length > 0) {\n");
      out.write("                        // 3. 패스워드 일치 여부 확인\n");
      out.write("                        if (passwordCheck()) {\n");
      out.write("                            // 4. 이름 입력 확인\n");
      out.write("                            if ($(\"#userName\").val().length > 0) {\n");
      out.write("                                sendSignUp();\n");
      out.write("                            } else {\n");
      out.write("                                alert(\"이름을 입력해주세요.\")\n");
      out.write("                            }\n");
      out.write("                        } else {\n");
      out.write("                            alert(\"비밀번호가 일치하지 않습니다.\");\n");
      out.write("                        }\n");
      out.write("                    } else {\n");
      out.write("                        alert(\"인증번호를 입력해주세요.\");\n");
      out.write("                        $(\"#certNumber\").focus();\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        /**\n");
      out.write("         * 인증번호 요청\n");
      out.write("         * @param phoneNumber - 핸드폰 번호 (-)는 입력받지 않음\n");
      out.write("         */\n");
      out.write("        function reqeustCertification(phoneNumber) {\n");
      out.write("            $.ajax(\"/user/signUp/certRequestAction\",\n");
      out.write("                {\n");
      out.write("                    method: 'POST',\n");
      out.write("                    data: {\n");
      out.write("                        \"phoneNumber\": phoneNumber,\n");
      out.write("                    },\n");
      out.write("                    dataType: 'JSON'\n");
      out.write("                }\n");
      out.write("            ).done(function (data) {\n");
      out.write("                // 메시지 발신 결과\n");
      out.write("                if (data.result === \"1\") {\n");
      out.write("                    alert(\"인증번호가 발송되었습니다.\");\n");
      out.write("                }\n");
      out.write("\n");
      out.write("            }).fail(function () {\n");
      out.write("                alert(\"잠시 후 다시 시도해 주세요.\");\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /**\n");
      out.write("         * 휴대폰번호 정규식 확인\n");
      out.write("         */\n");
      out.write("        function phoneFormat() {\n");
      out.write("            if ($(\"#phoneNumber\").val() === \"\" || $(\"#phoneNumber\").val().length !== 11 || isNaN($(\"#phoneNumber\").val())) {\n");
      out.write("                alert(\"휴대폰번호를 정확히 입력해 주세요.\");\n");
      out.write("                $(\"#phoneNumber\").val('');\n");
      out.write("                $(\"#phoneNumber\").focus();\n");
      out.write("                return false;\n");
      out.write("            }\n");
      out.write("            for (let i = 0; i < $(\"#phoneNumber\").val().length; i++) {\n");
      out.write("                const check = $(\"#phoneNumber\").val().substring(i, i + 1);\n");
      out.write("                if (check === \" \") {\n");
      out.write("                    alert(\"휴대폰번호를 정확히 입력해주세요.\");\n");
      out.write("                    $(\"#phoneNumber\").val('');\n");
      out.write("                    $(\"#phoneNumber\").focus();\n");
      out.write("                    return false;\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("            return true;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /**\n");
      out.write("         * 비밀번호 일치 여부 확인\n");
      out.write("         */\n");
      out.write("        function passwordCheck() {\n");
      out.write("            if ($(\"#password\").val() === $(\"#password2\").val()) {\n");
      out.write("                console.log(\"return true\");\n");
      out.write("                return true;\n");
      out.write("            } else {\n");
      out.write("                console.log(\"return false\");\n");
      out.write("                return false;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /**\n");
      out.write("         * 회원가입\n");
      out.write("         */\n");
      out.write("        function sendSignUp() {\n");
      out.write("            $.ajax(\"/user/signUp/signUpAction\",\n");
      out.write("                {\n");
      out.write("                    method: 'POST',\n");
      out.write("                    data: {\n");
      out.write("                        \"phoneNumber\": $(\"#phoneNumber\").val(),\n");
      out.write("                        \"certNumber\": $(\"#certNumber\").val(),\n");
      out.write("                        \"password\": $(\"#password\").val(),\n");
      out.write("                        \"userName\": $(\"#userName\").val()\n");
      out.write("                    },\n");
      out.write("                    dataType: 'JSON'\n");
      out.write("                }\n");
      out.write("            ).done(function (data) {\n");
      out.write("\n");
      out.write("                if (data.result == \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${SUCCESS}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\") {\n");
      out.write("                    alert(\"회원가입이 완료되었습니다.\");\n");
      out.write("                    history.back();\n");
      out.write("                } else if (data.result == \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${FAIL}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\") {\n");
      out.write("                    alert(\"회원가입에 실패하였습니다.\");\n");
      out.write("                } else if (data.result == \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${CERT_FAIL}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\") {\n");
      out.write("                    alert(\"인증번호를 다시 확인해주세요.\");\n");
      out.write("                } else if (data.result == \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${DUPLICATED}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\") {\n");
      out.write("                    alert(\"이미 가입된 휴대폰 번호입니다.\");\n");
      out.write("                }\n");
      out.write("\n");
      out.write("            }).fail(function () {\n");
      out.write("\n");
      out.write("            }).always(function () {\n");
      out.write("\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("\n");
      out.write("    </script>\n");
      out.write("    <style>\n");
      out.write("        body {\n");
      out.write("            background: #f3f5f6;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        #header {\n");
      out.write("            width: 100%;\n");
      out.write("            height: 10vh;\n");
      out.write("            padding-left: 5%;\n");
      out.write("            display: flex;\n");
      out.write("            align-items: center;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        #container {\n");
      out.write("            width: 100%;\n");
      out.write("            height: 82vh;\n");
      out.write("            padding: 5%;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        #content {\n");
      out.write("            display: flex;\n");
      out.write("            flex-direction: column;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        #footer {\n");
      out.write("            height: 8vh;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        body {\n");
      out.write("            background-color: #f3f3f3;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        #wrap {\n");
      out.write("            width: 400px;\n");
      out.write("            margin: 0 auto;\n");
      out.write("            max-height: 100vh;\n");
      out.write("            height: 100vh;\n");
      out.write("            background-color: white;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* 화면 너비 0 ~ 768px */\n");
      out.write("        @media (max-width: 400px) {\n");
      out.write("            #wrap {\n");
      out.write("                width: 100%;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        @media screen and (min-width: 769px) {\n");
      out.write("            /* 데스크탑에서 사용될 스타일 */\n");
      out.write("\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .span-input-title {\n");
      out.write("            font-weight: bolder;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .span-input-guide {\n");
      out.write("            font-size: small;\n");
      out.write("            color: grey;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        input::placeholder {\n");
      out.write("            font-size: medium;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        h1 {\n");
      out.write("            display: flex;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div id=\"wrap\">\n");
      out.write("    <div id=\"header\" style=\"margin: 0 auto\">\n");
      out.write("        <a href=\"javascript:history.back()\">\n");
      out.write("            <img src=\"/images/back_arrow_thin.svg\" href=\"go(-1)\" alt=\"뒤로가기\"/>\n");
      out.write("        </a>\n");
      out.write("    </div>\n");
      out.write("    ");
      out.write("\n");
      out.write("    <div id=\"container\">\n");
      out.write("        <div id=\"content\">\n");
      out.write("            <span class=\"span-input-title\">아이디(휴대전화)</span>\n");
      out.write("            <div class=\"input-group input-group-lg mt-2 mb-2\">\n");
      out.write("                <input id=\"phoneNumber\" name=\"phoneNumber\" type=\"number\" class=\"form-control input-lg\"\n");
      out.write("                       placeholder=\"- 는 빼고 입력해주세요\"\n");
      out.write("                       aria-label=\"id\"\n");
      out.write("                       value=\"01043556892\"\n");
      out.write("                       aria-describedby=\"basic-addon1\">\n");
      out.write("                <button id=\"btnRequestCert\" type=\"button\" class=\"btn btn-primary ml-1\"\n");
      out.write("                        style=\"border-radius: 0; border: 0; font-size: large; background-color: #3fceaa;\">인증번호 받기\n");
      out.write("                </button>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"input-group input-group-lg mb-4\">\n");
      out.write("                <input id=\"certNumber\" name=\"certNumber\" type=\"number\" class=\"form-control input-lg\"\n");
      out.write("                       placeholder=\"인증번호를 입력해주세요\"\n");
      out.write("                       aria-label=\"certNumber\"\n");
      out.write("                       value=\"9192\"\n");
      out.write("                       aria-describedby=\"basic-addon1\">\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <span class=\"span-input-title\">비밀번호</span>\n");
      out.write("            <div class=\"input-group input-group-lg mt-2 mb-2\">\n");
      out.write("                <input id=\"password\" name=\"password\" type=\"password\" class=\"form-control input-lg\" placeholder=\"비밀번호 입력\"\n");
      out.write("                       aria-label=\"password\"\n");
      out.write("                       value=\"123\"\n");
      out.write("                       aria-describedby=\"basic-addon1\">\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <div class=\"input-group input-group-lg mb-2\">\n");
      out.write("                <input id=\"password2\" name=\"password2\" type=\"password\" class=\"form-control\" placeholder=\"비밀번호 재확인 입력\"\n");
      out.write("                       aria-label=\"password2\"\n");
      out.write("                       value=\"123\"\n");
      out.write("                       aria-describedby=\"basic-addon1\">\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <span class=\"span-input-guide mb-4\">8~16자리 영문 대 소문자, 숫자, 특수문자를 사용하세요.</span>\n");
      out.write("\n");
      out.write("            <span class=\"span-input-title\">이름</span>\n");
      out.write("            <div class=\"input-group input-group-lg mt-2 mb-2\">\n");
      out.write("                <input id=\"userName\" name=\"userName\" type=\"text\" class=\"form-control input-lg\" placeholder=\"이름\"\n");
      out.write("                       aria-label=\"userName\"\n");
      out.write("                       value=\"홍길동\"\n");
      out.write("                       aria-describedby=\"basic-addon1\">\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <button id=\"btnSignUp\" type=\"button\" class=\"btn btn-primary mt-3 p-3\"\n");
      out.write("                    style=\"border-radius: 0; border: 0; background-color: #3fceaa; font-size: x-large;\">가입하기\n");
      out.write("            </button>\n");
      out.write("\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("    </div>\n");
      out.write("    <div id=\"footer\">\n");
      out.write("\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
