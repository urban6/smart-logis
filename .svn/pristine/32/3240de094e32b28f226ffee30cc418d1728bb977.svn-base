<%@ page pageEncoding="UTF-8" contentType="text/html;charset=UTF-8"%>
<%@ taglib uri="http://www.springframework.org/tags" prefix="spring"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt"%>
<%@ taglib uri="/WEB-INF/tag/shovvel.tld" prefix="shovvel"%>

<script type="text/javascript">
	var duplicatedTabMsg = "<spring:message code='msg.common.duplicated.newtab' />";

	$(document).ready(function() {

	});

	/**
	 * 화면 이동 함수
	 */
	function fnRedirect(url) {
		//console.log("-->"+url);
		document.frmRecent.action = url;
		document.frmRecent.target = "_parent";
		document.frmRecent.method = "post";
		document.frmRecent.submit();
	}

	/**
	 * 로그 아웃 함수
	 */
	function fnLogOutOk() {

		fnCloseWindowAll(); //먼저 창을 닫아야 한다.

		document.frmRecent.action="<%=request.getContextPath()%>/management/login/logoutAction";
		document.frmRecent.method = "post";
		document.frmRecent.target = "";
		document.frmRecent.submit();
	}

	function goUserInfo()
	{
		if ( $( "#userInfoPopup" ).html() != "" )
		{
			$( "#userInfoPopup" ).html( "" );
		}

		var param = new Object();
		param.user_sno = $
		{
			sessionUser.userSno
		}
		;

		$.ajax( {
			url : '/management/operation/usermanage/userInfo' ,
			type : 'POST' ,
			data : param ,
			success : function( data )
			{
				$( "#userInfoPopup" ).append( data );
			} ,
			complete : function()
			{
				openModal( '#userInfoPopup' );
				//popupPosition('#userInfoPopup');
			}
		} );

	}

	function goUserCreate()
	{
		var frm = makeform( "/management/operation/usermanage/add" );
		frm.submit();
	}

	function about()
	{
		var frm = makeform( "/management/help/information/list" );
		frm.submit();
	}

	$( document ).ready( function()
	{
		console.log( "${titleName}" )
		var userLevel = "${sessionUser.userLevel}";
		var userLevelArray = userLevel.split( " " );
		if ( userLevelArray.length == 1 )
		{
			$( "#userLevelSpan1" ).text( userLevelArray[ 0 ] );
		}
		else if ( userLevelArray.length == 2 )
		{
			$( "#userLevelSpan1" ).text( userLevelArray[ 0 ] );
			$( "#userLevelSpan2" ).text( userLevelArray[ 1 ] );
		}
		$( ".connect" ).attr( "style" , "visibility: hidden" );
		//	 	alert( "loginResult1 : ${loginResult}" );

		if ( "${loginResult}" != "undefined" && "${loginResult}" != "" )
		{
			var loginResult = "${loginResult}";
			alert( loginResult );
			if ( loginResult == "800" )
			{
				var str = "passwdExpiration";
				openPasswordChangeModal( str );
			}
			else if ( loginResult == "700" )
			{
				openAlertModal( "" , '<spring:message code="msg.login.failed.expired.account.noti" arguments="${dueDay}"/>' , function()
				{
				} );
			}
		}

		$( window ).scroll( function()
		{
			//console.log("==========scroll");
			if ( $( "._soFlashEffectDiv" ).length > 0 )
			{
				var sWidth = $( "._soFlashEffectDiv:eq(2)" ).css( "width" );
				$( "._soFlashEffectDiv" ).css( "top" , $( "body" ).scrollTop() + "px" );
				$( "._soFlashEffectDiv:eq(1)" ).css( "top" , "calc(100% + " + ( $( "body" ).scrollTop() ) + "px - " + sWidth + ")" );
			}
		} );

		var recentPageWidth;
		var maxRPW = 850;
		var minLength = 2;

		for ( var rp = 0 ; rp < minLength ; rp++ )
		{
			recentPageWidth = $( "#recentPageList" ).width();
			if ( recentPageWidth > maxRPW )
			{
				$( "#recentPageList li" ).eq( $( "#recentPageList li" ).length - 1 ).remove();
			}
		}
	} );

	function changePassword()
	{

		if ( $.trim( $( "#current_password" ).val() ) == "" )
		{
			// 현재 비밀번호를 입력해 주세요.
			showMessage( '<spring:message code="msg.change.password.current_password.msg" />' );
			$( "#current_password" ).focus();
			return;
		}
		else if ( $.trim( $( "#new_password1" ).val() ) == "" )
		{
			// 새 비밀번호를 입력해 주세요.
			showMessage( '<spring:message code="msg.change.password.new_password1.msg" />' );
			$( "#new_password1" ).focus();
			return;
		}
		else if ( $.trim( $( "#new_password2" ).val() ) == "" )
		{
			// 새 비밀번호 확인을 입력해 주세요.
			showMessage( '<spring:message code="msg.change.password.new_password2.msg" />' );
			$( "#new_password2" ).focus();
			return;
		}
		else if ( $.trim( $( "#new_password1" ).val() ) != $.trim( $( "#new_password2" ).val() ) )
		{
			// 새 비밀번호와 새 비밀번호 확인이 일치하지 않습니다.
			showMessage( '<spring:message code="msg.change.password.new_password.not_equal.msg" />' );
			$( "#new_password1" ).focus();
			$( "#new_password1" ).val( "" );
			$( "#new_password2" ).val( "" );
			return;
		}
		else if ( $.trim( $( "#new_password1" ).val() ) == $.trim( $( "#current_password" ).val() ) )
		{
			// 현재 비밀번호와 다른 비밀번호를 입력해 주세요.
			showMessage( '<spring:message code="msg.change.password.other_passwd.msg" />' );
			$( "#new_password1" ).focus();
			$( "#new_password1" ).val( "" );
			$( "#new_password2" ).val( "" );
			return;
		}
		else if ( ( $( "#new_password1" ).val().length < 5 ) || ( $( "#new_password1" ).val().length > 12 ) )
		{
			showMessage( '<spring:message code="msg.change.password.check_length.msg" />' );
			$( "#new_password1" ).val( "" );
			$( "#new_password2" ).val( "" );
			$( "#new_password1" ).focus();
			return;
		}
		else if ( !isValidPasswd( $( "#new_password1" ).val() ) )
		{
			showMessage( '<spring:message code="msg.security.usermanage.check_character.valid.password" />' );
			$( "#new_password1" ).val( "" );
			$( "#new_password2" ).val( "" );
			$( "#new_password1" ).focus();
			return;
		}
		/* else if(!isValidAlphaOrNum($("#new_password1").val())){
			// Please enter Password (alphabet+numbers).
			showMessage('<spring:message code="msg.security.usermanage.check_character.password" />');
			$("#new_password1").focus();
			$("#new_password1").val("");
			$("#new_password2").val("");
			return;
		} */
		else
		{

			var rsaPublicKeyModulus = $( "#rsaPublicKeyModulus" ).val();
			var rsaPublicKeyExponent = $( "#rsaPublicKeyExponent" ).val();

			console.log( "rsaPublicKeyModulus : " + rsaPublicKeyModulus );
			console.log( "rsaPublicKeyExponent : " + rsaPublicKeyExponent );

			var rsa = new RSAKey();
			rsa.setPublic( rsaPublicKeyModulus , rsaPublicKeyExponent );

			var param = new Object();
			param.current_password = rsa.encrypt( $( "#current_password" ).val() );
			param.new_password = rsa.encrypt( $( "#new_password1" ).val() );

			$.ajax( {
				url : '/management/login/changePasswordAction' ,
				type : 'POST' ,
				data : param ,
				dataType : 'json' ,
				success : function( data )
				{
					if ( data.result == "-1" )
					{
						showMessage( '<spring:message code="msg.change.password.wrong_passwd.msg" />' );
					}
					else if ( data.result == "1" )
					{
						closeModal();
						openAlertModal( "" , '<spring:message code="msg.change.password.change_complete.msg" />' , function()
						{
						} );
					}
				} ,
				error : function( e )
				{
					if ( typeof e.reponseText == "undefined" )
					{
						showMessage( '<spring:message code="msg.login.error.webserver"/>' );
					}
					else
					{
						alert( e.reponseText );
					}
				} ,
				complete : function()
				{
					$( "#current_password" ).val( "" );
					$( "#new_password1" ).val( "" );
					$( "#new_password2" ).val( "" );
				}
			} );
		}
	}

	function showMessage( message )
	{
		$( "#infoMsg" ).removeClass( "hide" );
		$( "#infoMsg" ).addClass( "show" );
		$( "#infoMsg" ).text( message );
	}

	function fnMovePage( url )
	{
		document.frmRecent.action = url;
		document.frmRecent.method = "post";
		document.frmRecent.target = "";
		document.frmRecent.submit();
	}
</script>

<!-- header -->
<div class="header nav">
	<div class="gnb">
		<h1 class="gnb_logo">
			<a href="javascript:movePage('${listAuthorizationMenu[0].MENU_PATH}');">헬스파일럿관리자웹</a>
		</h1>
		<ul class="gnb_menu">
			<c:forEach items="${listAuthorizationMenu}" var="menu1Depth" varStatus="status1Depth">
				<li class="dep_01">
					<a href="
        	    		<c:if test="${menu1Depth.IS_FOLDER eq 'Y'}" >#</c:if>
        		 		<c:if test="${menu1Depth.IS_FOLDER eq 'N'}">javascript:movePage('${menu1Depth.MENU_PATH}');</c:if>" class="dep_01_a">
						<span>${menu1Depth.MENU_NAME}</span>
					</a>
					<c:if test="${fn:length(menu1Depth.CHILDREN) ne 0}">
						<ul class="dropdown">
							<c:forEach items="${menu1Depth.CHILDREN}" var="menu2Depth" varStatus="status2Depth">
								<li class="dep_02">
									<a href="javascript:movePage('${menu2Depth.MENU_PATH}');">${menu2Depth.MENU_NAME}</a>
								</li>
							</c:forEach>
						</ul>
					</c:if>
				</li>
			</c:forEach>
		</ul>
		<button class="btn icon close_all" type="button">close gnb view all</button>
		<ul class="top_menu">
			<li class="dep_01 user">
				<a href="javascript:goUserInfo()">
					<i class="icon"></i>
					<span>${sessionUser.loginId}</span>
				</a>
			</li>
			<li class="dep_01 logout">
				<a href="javascript:openConfirmModal('CONFIRMATION','<spring:message code="msg.common.logout" />',fnLogOutOk);">
					<i class="icon"></i>
					<span>Logout</span>
				</a>
			</li>
		</ul>
	</div>
</div>
<section id="userInfoPopup" class="popup ml"></section>
<!-- //header -->