<?xml version="1.0" encoding="UTF-8" ?>
 <!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.shovvel.dm.dao.management.operation.usermanage.UserManageMapper">

	<select id="selectEncryptPasswd" resultType="String">
		 SELECT #{passwd} FROM DUAL
	</select>

	<select id="getPasswd" resultType="String">
		 SELECT PASSWD
			FROM ONC_COM_USER
		  WHERE	USER_SNO = #{userSno}
	</select>

	<select id="getPasswdLifeCycle" resultType="int">
		 SELECT IFNULL(PASSWD_LIFE_CYCLE,7) AS PASSWD_LIFE_CYCLE
			FROM ONC_COM_USER_LEVEL
		  WHERE LEVEL_ID = #{userLevelId}
	</select>

	 <select id="duplChkUserSno" resultType="int">
		SELECT COUNT(*)
		FROM ONC_COM_USER
		WHERE	USER_SNO	<![CDATA[>]]>	0
		<choose>
			<when test='condition.status == "N"'>
				AND STATUS = 'N'
			</when>
			<otherwise>
				AND STATUS = 'Y'
			</otherwise>
		</choose>

			<if test="condition.userSno != '' and condition.userSno!= null">
			AND	USER_SNO	=	#{condition.userSno}
		</if>

			<if test="condition.loginId != '' and condition.loginId!= null">
			AND UPPER(LOGIN_ID) = UPPER(#{condition.loginId})
		</if>
	</select>


	<sql id="sqlUserInfo">
		SELECT
		/* ONC_COM_USER */ /*운영진; DM 서비스를 사용하는 운영진 (의료진, 관리자 등)의 정보를 관리*/
			A.USER_SNO /*운영진 일련번호*/
		,	A.PARTNER_SNO /*파트너사 일련번호*/
		,	A.LEVEL_ID /*레벨ID*/
		,	A.USER_FNM /*운영진 성명*/
		,	A.USER_ENG_FNM /*운영진 영문 성명*/
		,	A.LOGIN_ID /*운영진 아이디*/
		,	A.PASSWD /*운영진 비밀번호*/
		,	A.USER_CTCD /*운영진 유형코드 00201000 운영진 유형코드 00201100 전문가 00201200 의료진 00201300 콜센터 00201900 관리자, 00202000 슈퍼관리자*/
		,	A.USER_AREA_CLCD /*운영진 영역 구분코드 00201110 혈당전문가 00201120 식이전문  */
		,	A.USER_TEL_NO /*운영진 일반전화 번호*/
		,	A.USER_HP_NO /*운영진 휴대전화 번호*/
		,	A.USER_EMAIL /*운영진 이메일*/
		,	A.USER_LOCALE /*운영진 언어 코드*/
		,	A.USER_GUNIT_CLCD /*운영진 혈당 단위*/
		,	A.USER_BELONGTO /*운영진 소속*/
		,	A.USER_INTRODUCE /*운영진 소개*/
		,	A.IMG_FILE_SNO /*이미지 파일 일련번호*/
		,	A.USE_YN /*사용 여부*/
		,	A.INS_DT /**/
		,	A.INS_USER_SNO /*등록자 일련번호*/
		,	A.UPD_DT /**/
		,	A.UPD_USER_SNO /*수정자 일련번호*/
		,	A.DEFAULT_PASSWD_YN /*디폴트 비밀번호 여부*/
		,	A.LOGIN_COUNT /*로그인횟수*/
		,	A.LAST_LOGIN_IP /*최종로그인IP*/
		,	A.LAST_LOGIN_DATE /*최종로그인일시*/
		,	A.PASSWD_EXFIRE /*비밀번호만료일*/
		,	A.ACCOUNT_EXFIRE /*계정만료일*/
		,	A.STATUS /*상태 Y:정상, N:삭제, L:계정잠금(LOCK)*/
		,	A.STATUS_REASON /*상태설명*/
		,	A.RETRY_COUNT /*재시도횟수*/
		,	A.MARK /**/
		,	DATE_FORMAT(A.BRDY, '%Y-%m-%d') AS	BRDY /*생일*/
		,	DATE_FORMAT(A.BRDY, '%Y년 %m월 %d일') AS	BRDY_STR /*생일*/
		,	A.DEPT /*부서*/
		,	D.CD_NM	AS	DEPT_NM /*부서이름*/
		,	A.SID /*직원식별ID*/
		,	A.PASSWD_INIT_YN /*비밀번호 초기화 여부*/

		/* ONC_COM_USER_LEVEL */ /*사용자 레벨*/
		,	B.LEVEL_TITLE /*레벨명*/
		,	B.PASSWD_LIFE_CYCLE /*비밀번호변경주기*/
		,	B.ACCOUNT_LIFE_CYCLE /*계정만료주기*/
		,	B.ABSENT_LOCK_DAY /*일정기간 미접속시 계정잠금*/
		,	B.MAX_WRONG_PASSWD /*비밀번호오류허용회수*/
		,	B.MAX_WRONG_PASSWD_YN /*비밀번호오류허용설정여부*/
		,	B.LOCK_TYPE /*잠금유형*/
		,	B.LOCK_TIME /*잠금시간*/
		,	B.PASSWD_NOTI_DAY /*비밀번호변경알림*/
		,	B.ACCOUNT_NOTI_DAY /*계정만료알림*/
		,	B.DESCRIPTION /*설명*/
		,	B.PARTNER_CLCD /*파트너사 구분*/
		,	B.LEVEL_CLCD /*파트너사 권한구분*/
		,	B.DISPLAY_ORDER /**/

		,	DATE_FORMAT(A.ACCOUNT_EXFIRE, '%Y-%m-%d') AS ACCOUNT_EXFIRE_DATE
		FROM	ONC_COM_USER	A
		LEFT	OUTER	JOIN	ONC_COM_USER_LEVEL	B
			ON	A.LEVEL_ID	=	B.LEVEL_ID
		LEFT	OUTER	JOIN	ONC_COM_CODE	D
			ON	A.DEPT	=	D.CD_NO
			AND	D.CD_CODE = '2000000001'
		WHERE	A.LEVEL_ID <![CDATA[>=]]> #{condition.userLevelId}
			<if test="condition.loginId != '' and condition.loginId!= null">
				AND UPPER(A.LOGIN_ID) = UPPER(#{condition.loginId})
			</if>
			<if test="condition.searchUserLevel != '' and condition.searchUserLevel != null and condition.searchUserLevel != 'all'">
				AND A.LEVEL_ID = #{condition.searchUserLevel}
			</if>
			<if test="condition.searchText != '' and condition.searchText != null">
				AND	(
						A.LOGIN_ID	LIKE	CONCAT('%', #{condition.searchText}, '%')
					OR	A.USER_FNM	LIKE	CONCAT('%', #{condition.searchText}, '%')
					)
			</if>
			<if test="condition.searchDept != '' and condition.searchDept != null">
				AND	A.DEPT	=	#{condition.searchDept}
			</if>

			<choose>
				<when test='condition.searchState == "Y"'>
					AND	A.STATUS = 'N'
				</when>
				<when test='condition.searchState == "N"'>
					AND	A.STATUS = 'Y'
				</when>
				<when test='condition.searchState == "ALL"'>
					AND	(
							A.STATUS = 'Y'
						OR	A.STATUS = 'N'
						)
				</when>
				<otherwise>
					AND	A.STATUS = 'Y'
				</otherwise>
			</choose>
	</sql>

	<select id="count" resultType="int">
		SELECT	COUNT(*)
		FROM
		(
			<include refid="sqlUserInfo" />
		)	CNT
	</select>

	<select id="list" resultType="kr.co.shovvel.dm.domain.management.operation.usermanage.UserManageDomainVO">
		<include refid="kr.co.shovvel.dm.dao.common.CommonMapper.paging_header" />
			<include refid="sqlUserInfo" />
			 ORDER BY
				<choose>
					<when test='condition.orderbyClause == "SID"'>A.LOGIN_ID</when>
					<otherwise>
						INS_DT
					</otherwise>
				</choose>
				<choose>
					<when test='condition.orderBy == "ASC"'>ASC</when>
					<otherwise>
						DESC
					</otherwise>
				</choose>
		<include refid="kr.co.shovvel.dm.dao.common.CommonMapper.paging_footer" />
	</select>

	<select id="detail" resultType="kr.co.shovvel.dm.domain.management.operation.usermanage.UserManageDomainVO">
		<include refid="sqlUserInfo" />
			AND	A.USER_SNO	=	#{condition.userSno}
			LIMIT	1
	</select>

	<insert id="addAction" parameterType="kr.co.shovvel.dm.domain.management.operation.usermanage.UserManageDomain">
		INSERT INTO ONC_COM_USER
		(
			PARTNER_SNO
		,	LEVEL_ID
		,	USER_FNM
		,	LOGIN_ID
		,	PASSWD
		,	USER_EMAIL
		,	USER_HP_NO
		,	DEFAULT_PASSWD_YN
		,	USER_CTCD
		,	USE_YN
		,	INS_DT
		,	INS_USER_SNO
		,	UPD_DT
		,	UPD_USER_SNO
		,	STATUS
		,	BRDY
		,	DEPT
		,	SID
		,	PASSWD_INIT_YN
		)
		VALUES
		(
			#{partnerSno}
		,	#{levelId}
		,	#{userFnm}
		,	#{loginId}
		,	#{passwd}
		,	#{userEmail}
		,	#{userHpNo}
		,	#{defaultPasswdYn}
		,	''
		,	'Y'
		,	NOW()
		,	#{insUserSno}
		,	NOW()
		,	#{insUserSno}
		,	'Y'
		,	#{brdy}
		,	#{dept}
		,	#{sid}
		,	#{passwdInitYn}
		)

		<selectKey keyProperty="user_sno" resultType="String" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

	<update id="modifyAction" parameterType="kr.co.shovvel.dm.domain.management.operation.usermanage.UserManageDomain">
		UPDATE ONC_COM_USER
			SET	LEVEL_ID	=	#{condition.levelId}
			,	BRDY	=	#{condition.brdy}
			,	DEPT	=	#{condition.dept}
			,	UPD_DT	=	NOW()
		 WHERE STATUS = 'Y'
			AND USER_SNO = #{condition.userSno}
	</update>

	<delete id="removeAction" parameterType="kr.co.shovvel.dm.domain.management.operation.usermanage.UserManageDomain">
		UPDATE	ONC_COM_USER
		SET		STATUS = 'N'
			,	UPD_DT	=	NOW()
		 WHERE	USER_SNO = #{condition.userSno}
	</delete>

	<update id="modifyPasswdAction" parameterType="kr.co.shovvel.dm.domain.management.operation.usermanage.UserManageDomain">
		UPDATE	ONC_COM_USER
		SET		PASSWD	=	#{condition.passwd}
			,	PASSWD_INIT_YN	=	'N'
			,	UPD_DT	=	NOW()
		WHERE	STATUS = 'Y'
			AND	USER_SNO = #{condition.userSno}
	</update>

	<update id="initPasswdAction" parameterType="kr.co.shovvel.dm.domain.management.operation.usermanage.UserManageDomain">
		UPDATE	ONC_COM_USER
		SET		PASSWD_INIT_YN	=	'Y'
			,	PASSWD	=	#{condition.passwd}
			,	UPD_DT	=	NOW()
		WHERE	STATUS = 'Y'
			AND	USER_SNO = #{condition.userSno}
			AND	LOGIN_ID = #{condition.loginId}
	</update>

	<update id="changePasswdAction" parameterType="kr.co.shovvel.dm.domain.management.operation.usermanage.UserManageDomain">
		UPDATE	ONC_COM_USER
		SET		DEFAULT_PASSWD_YN	=	'N'
			,	PASSWD_INIT_YN	=	'N'
			,	PASSWD	=	#{condition.passwd}
			,	UPD_DT	=	NOW()
		WHERE	STATUS = 'Y'
			AND	USER_SNO = #{condition.userSno}
			AND	LOGIN_ID = #{condition.loginId}
	</update>

	<update id="restoreAction" parameterType="kr.co.shovvel.dm.domain.management.operation.usermanage.UserManageDomain">
		UPDATE	ONC_COM_USER
		SET		STATUS = 'Y'
			,	UPD_DT	=	NOW()
		WHERE	STATUS = 'N'
			AND	USER_SNO = #{condition.userSno}
			AND	LOGIN_ID = #{condition.loginId}
	</update>

	<sql id="sqlComCode">
 		SELECT	SEQ
 			,	CD_CODE
 			,	CD_NO
 			,	CD_NM
 		FROM	ONC_COM_CODE
 	</sql>

	<select id="listDept" resultType="kr.co.shovvel.dm.domain.management.operation.usermanage.UserDeptDomainVO">
		SELECT	CD_NO		AS	DEPT
 			,	CD_NM		AS	DEPT_NM
		FROM
		(
			<include refid="sqlComCode" />
		)	DEPT_LIST
 		WHERE	CD_CODE		=	'2000000001'
	</select>

</mapper>

