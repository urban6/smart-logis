<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.shovvel.dm.dao.logis.warehouse.apply.WarehouseApplyMapper">

    <!-- 등록되어 있는 창고 리스트를 조회한다. -->
    <select id="getWarehouseName" resultType="kr.co.shovvel.dm.domain.warehouse.WarehouseInfo">
        SELECT WAREHOUSE_UID, WAREHOUSE_NAME
        FROM warehouse;
    </select>

    <!-- 현재 사용자가 빌리고 있는 창고 리스트를 조회한다. -->
    <select id="getUsingWarehouseName" parameterType="string" resultType="kr.co.shovvel.dm.domain.warehouse.WarehouseInfo">
        SELECT woi.ORDER_INFO_UID,
        w.WAREHOUSE_UID,
        w.WAREHOUSE_NAME,
        w.WAREHOUSE_ADDRESS,
        w.WAREHOUSE_POSTCODE,
        DATE(START_TIME) START_DATETIME,
        DATE(END_TIME) END_DATETIME
        FROM warehouse_order_info AS woi
        JOIN warehouse AS w ON woi.WAREHOUSE_UID = w.WAREHOUSE_UID
        WHERE USER_UID = #{userUid}
        AND NOW() BETWEEN START_TIME AND END_TIME;
    </select>

    <!-- 사용자가 설정한 기간과 공간에 맞는 창고들을 조회한다. -->
    <select id="searchAvailableWarehouse" resultType="kr.co.shovvel.dm.domain.warehouse.WarehouseInfo"
            parameterType="string">
        SELECT w.WAREHOUSE_UID AS WAREHOUSE_UID, WAREHOUSE_NAME, WAREHOUSE_ADDRESS, LAT, LNG, w.PRICE AS PRICE, 1 AS IS_CAN_USE,
        DATEDIFF(DATE_FORMAT(#{endDatetime}, '%Y-%m-%d %H:%i:%s'), DATE_FORMAT(#{startDatetime}, '%Y-%m-%d %H:%i:%s'))
        AS DAYS,
        #{spaceSize} AS SPACE_SIZE, AVAILABLE_SPACE, #{startDatetime} AS START_DATETIME, #{endDatetime} AS END_DATETIME
        FROM warehouse w
        JOIN (
        <![CDATA[
            SELECT w.WAREHOUSE_UID, IF(WAREHOUSE_SIZE - USING_SPACE IS NULL, WAREHOUSE_SIZE, WAREHOUSE_SIZE - USING_SPACE) AS AVAILABLE_SPACE
            FROM warehouse AS w
                     LEFT OUTER JOIN (SELECT WAREHOUSE_UID, SUM(SIZE) AS USING_SPACE
                                      FROM warehouse_order_info
                                      WHERE (DATE_FORMAT(#{startDatetime}, '%Y-%m-%d %H:%i:%s') <= END_TIME
                                         AND DATE_FORMAT(#{endDatetime}, '%Y-%m-%d %H:%i:%s') >= START_TIME)
                                         AND IS_PAY = 'Y' OR (IS_PAY = 'N' AND NOW() < DATE_ADD(REQUEST_TIME, INTERVAL 10 MINUTE))
                                      GROUP BY WAREHOUSE_UID) AS ws ON w.WAREHOUSE_UID = ws.WAREHOUSE_UID
            ]]>
        ) AS r ON w.WAREHOUSE_UID = r.WAREHOUSE_UID
        WHERE w.IS_USED = 1
        ORDER BY w.PRICE ASC;
    </select>

    <!-- 사용할 수 없는 창고를 조회한다. -->
    <select id="searchUnavailAbleWarehouse" resultType="kr.co.shovvel.dm.domain.warehouse.WarehouseInfo"
            parameterType="string">
        SELECT w.WAREHOUSE_UID AS WAREHOUSE_UID, WAREHOUSE_NAME, WAREHOUSE_ADDRESS, LAT, LNG, w.PRICE AS PRICE, 0 AS IS_CAN_USE,
        DATEDIFF(DATE_FORMAT(#{endDatetime}, '%Y-%m-%d %H:%i:%s'), DATE_FORMAT(#{startDatetime}, '%Y-%m-%d %H:%i:%s'))
        AS DAYS,
        #{spaceSize} AS SPACE_SIZE, AVAILABLE_SPACE, #{startDatetime} AS START_DATETIME, #{endDatetime} AS END_DATETIME
        FROM warehouse w
        JOIN (
        <![CDATA[
        SELECT w.WAREHOUSE_UID, IF(WAREHOUSE_SIZE - USING_SPACE IS NULL, WAREHOUSE_SIZE, WAREHOUSE_SIZE - USING_SPACE) AS AVAILABLE_SPACE
        FROM warehouse AS w
                 LEFT OUTER JOIN (SELECT WAREHOUSE_UID, SUM(SIZE) AS USING_SPACE
                                  FROM warehouse_order_info
                                  WHERE (DATE_FORMAT(#{startDatetime}, '%Y-%m-%d %H:%i:%s') < END_TIME
                                    AND DATE_FORMAT(#{endDatetime}, '%Y-%m-%d %H:%i:%s') > START_TIME)
                                    AND IS_PAY = 'Y' OR (IS_PAY = 'N' AND NOW() < DATE_ADD(REQUEST_TIME, INTERVAL 2 HOUR))
                                  GROUP BY WAREHOUSE_UID) AS ws ON w.WAREHOUSE_UID = ws.WAREHOUSE_UID
        ]]>
        ) AS r ON w.WAREHOUSE_UID = r.WAREHOUSE_UID
        WHERE w.IS_USED = 0
        ORDER BY w.PRICE ASC;
    </select>

    <!-- 사용자가 설정한 기간과 공간에 맞는 창고들을 조회한다. -->
    <select id="searchSelectedWarehouse" resultType="kr.co.shovvel.dm.domain.warehouse.WarehouseInfo" parameterType="string">
        SELECT w.WAREHOUSE_UID AS WAREHOUSE_UID, WAREHOUSE_NAME, WAREHOUSE_ADDRESS, LAT, LNG, w.PRICE AS PRICE,
        DATEDIFF(DATE_FORMAT(#{endDatetime}, '%Y-%m-%d %H:%i:%s'), DATE_FORMAT(#{startDatetime}, '%Y-%m-%d %H:%i:%s'))
        AS DAYS,
        #{spaceSize} AS SPACE_SIZE, AVAILABLE_SPACE, #{startDatetime} AS START_DATETIME, #{endDatetime} AS END_DATETIME
        FROM warehouse w
        JOIN (
        <![CDATA[
            SELECT w.WAREHOUSE_UID, IF(WAREHOUSE_SIZE - USING_SPACE IS NULL, WAREHOUSE_SIZE, WAREHOUSE_SIZE - USING_SPACE) AS AVAILABLE_SPACE
            FROM warehouse AS w
                     LEFT OUTER JOIN (SELECT WAREHOUSE_UID, SUM(SIZE) AS USING_SPACE
                                      FROM warehouse_order_info
                                      WHERE (DATE_FORMAT(#{startDatetime}, '%Y-%m-%d %H:%i:%s') < END_TIME
                                        AND DATE_FORMAT(#{endDatetime}, '%Y-%m-%d %H:%i:%s') > START_TIME)
                                        AND IS_PAY = 'Y' OR (IS_PAY = 'N' AND NOW() < DATE_ADD(REQUEST_TIME, INTERVAL 2 HOUR))
                                      GROUP BY WAREHOUSE_UID) AS ws ON w.WAREHOUSE_UID = ws.WAREHOUSE_UID
            ]]>
        ) AS r ON w.WAREHOUSE_UID = r.WAREHOUSE_UID
        WHERE w.IS_USED = 1 AND w.WAREHOUSE_UID = #{warehouseUid};
    </select>

    <!-- 결제를 하기 전에 사용할 수 있는 공간을 한번 더 확인한다.  -->
    <select id="searchUsableSpaceCount" parameterType="string" resultType="int">
        <![CDATA[
        SELECT IF(WAREHOUSE_SIZE - USING_SPACE IS NULL, WAREHOUSE_SIZE, WAREHOUSE_SIZE - USING_SPACE) AS AVAILABLE_SPACE
        FROM warehouse AS w
        LEFT OUTER JOIN ( SELECT WAREHOUSE_UID, SUM(SIZE) AS USING_SPACE
                          FROM warehouse_order_info
                          WHERE WAREHOUSE_UID = #{warehouseUid}
                                AND DATE_FORMAT(#{startDatetime}, '%Y-%m-%d %H:%i:%s') < END_TIME
                                AND DATE_FORMAT(#{endDatetime}, '%Y-%m-%d %H:%i:%s') > START_TIME
        ) AS wp ON w.WAREHOUSE_UID = wp.WAREHOUSE_UID
        WHERE w.WAREHOUSE_UID = #{warehouseUid};
        ]]>
    </select>

    <!-- 결제를 하고 신청 데이터를 추가한다. -->
    <insert id="addWarehouseOrderInfo" parameterType="kr.co.shovvel.dm.domain.logis.warehouse.WarehouseOrderInfo"
            useGeneratedKeys="true" keyProperty="orderInfoUid">
        INSERT INTO warehouse_order_info ( USER_UID, COMPANY_UID, WAREHOUSE_UID, START_TIME, END_TIME, SIZE, STATUS, PRICE, PAY_TYPE,
        IS_PAY )
        VALUES ( #{userUid}, #{companyUid}, #{warehouseUid}, #{startTime}, #{endTime}, #{size}, #{status}, #{price}, #{payType},
        #{isPay} )
    </insert>

    <!-- 결제가 완료되었을 때, 상태를 변경해준다. -->
    <update id="updatePayStateInOrderInfo" parameterType="string">
        UPDATE warehouse_order_info
        SET IS_PAY = 'Y', SELLERORDERREFERENCEKEY = #{salesUid}, STATUS = 1
        WHERE ORDER_INFO_UID = #{orderInfoUid} AND STATUS = 0;
    </update>

</mapper>