<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.shovvel.dm.dao.logis.order.OrderMapper">

	<!-- 주문 내역 조회 쿼리  SELLER_PRODUCT_ORDER -->
    <select id="getOrderList" resultType="OrderDTO">
    	SELECT IFNULL(S.ORDER_UID, '-')							ORDER_UID
             , IFNULL(S.PRODUCTID, '-')							PRODUCTID
             , IFNULL(U.LOGIN_ID, '-')							LOGIN_ID
             , DATE_FORMAT(S.ORDER_DATE, '%Y.%m.%d %H:%i')		ORDER_DATE
             , IFNULL(S.ORDERPRODUCTSTATUSNAME, '-')			ORDERPRODUCTSTATUSNAME
          FROM seller_product_order S
         INNER JOIN
               user U
            ON S.USER_UID = U.USER_UID        
        
        <!-- 동적 쿼리 실행 구문 -->
        <where>
        	
        	<!-- 주문일자 범위 -->    
        	<if test="startDate != '' and startDate != null and endDate != '' and endDate != null">
               DATE_FORMAT(S.ORDER_DATE, '%Y-%m-%d') BETWEEN #{startDate} AND #{endDate}        	
        	</if>
        	        
        	<!-- 주문자 아이디 -->
    		<if test="keyword != '' and keyword != null">
           AND INSTR(U.LOGIN_ID, #{keyword}) > 0
        	</if>
        	
        </where>
        
         ORDER BY ORDER_DATE DESC;
    </select>
    
    <!-- 주문 상세 내역 조회 쿼리 -->
    <select id="getOrderDetail" resultType="OrderDTO">
    	SELECT IFNULL(A.ORDER_UID, '-')										ORDER_UID
             , IFNULL(C.LOGIN_ID, '-')										LOGIN_ID
             , IFNULL(A.SELLERORDERREFERENCEKEY, '-')						SELLERORDERREFERENCEKEY
             , IFNULL(A.CPID, '-')											CPID
             , IFNULL(A.PRODUCTID, '-')										PRODUCTID
             , IFNULL(A.ORDERQUANTITY, 0)									ORDERQUANTITY
             , IFNULL(A.SELLERORDERPRODUCTREFERENCEKEY, '-')				SELLERORDERPRODUCTREFERENCEKEY
             , IFNULL(A.SORTORDERING, 0)									SORTORDERING
             , DATE_FORMAT(A.ORDER_DATE, '%Y.%m.%d %H:%i')  				ORDER_DATE
             , IFNULL(A.ORDERPRODUCTNO, '-')								ORDERPRODUCTNO
             , IFNULL(A.ORDERPRODUCTSTATUSCODE, '-')						ORDERPRODUCTSTATUSCODE
             , IFNULL(A.ORDERPRODUCTSTATUSNAME, '-')						ORDERPRODUCTSTATUSNAME
             , IFNULL(B.APPROVAL_UID, '-')									APPROVAL_UID
             , IFNULL(B.ORDERRETURNURL, '-')								ORDERRETURNURL
             , IFNULL(B.ORDERNO, '-')										ORDERNO
             , IFNULL(B.ORDERCHANNEL, '-')									ORDERCHANNEL
             , IFNULL(B.TOTALORDERAMT, 0)									TOTALORDERAMT
             , IFNULL(B.TOTALPAYMENTAMT, 0)									TOTALPAYMENTAMT
             , IFNULL(B.PAYMENTCOMPLETIONYN, '-')							PAYMENTCOMPLETIONYN
             , IFNULL(B.ORDERCERTIFYKEY, '-')								ORDERCERTIFYKEY
             , IFNULL(B.PAYMENTTRADENO, '-')								PAYMENTTRADENO
             , IFNULL(B.PAYMENTMETHODCODE, '-')								PAYMENTMETHODCODE
             , IFNULL(B.PAYMENTMETHODNAME, '-')								PAYMENTMETHODNAME
             , IFNULL(B.TRADEYMDT, '-')										TRADEYMDT
             , IFNULL(B.PGADMISSIONNO, '-')									PGADMISSIONNO
             , IFNULL(B.PGADMISSIONYMDT, '-')								PGADMISSIONYMDT
             , IF(B.IS_CANCEL IS NULL, 'N', 'Y')							IS_CANCEL
             , IFNULL(B.TOTALCANCELPOSSIBLEAMT, 0)							TOTALCANCELPOSSIBLEAMT
             , IFNULL(B.CANCEL_MEMO, '-')									CANCEL_MEMO
          FROM seller_product_order A
          LEFT OUTER JOIN
               seller_approval B
            ON A.SELLERORDERREFERENCEKEY = B.SELLERORDERREFERENCEKEY
         INNER JOIN
               user C
            ON A.USER_UID = C.USER_UID
         WHERE A.ORDER_UID = #{orderUid};
    </select>

    <!-- 창고 신청 내역 조회 쿼리 -->
    <select id="getWarehouseList" resultType="WarehouseDTO">    	
    	SELECT IFNULL(A.ORDER_INFO_UID, '-')                ORDER_INFO_UID
             , IFNULL(B.LOGIN_ID, '-')                      LOGIN_ID
             , IFNULL(A.COMPANY_UID, '-')                   COMPANY_UID
             , DATE_FORMAT(A.START_TIME, '%Y.%m.%d %H:%i')  START_TIME
             , DATE_FORMAT(A.END_TIME, '%Y.%m.%d %H:%i')    END_TIME
             , IFNULL(A.PRICE, 0)                			PRICE
          FROM warehouse_order_info A
         INNER JOIN
               user B
            ON A.USER_UID = B.USER_UID
        
        <!-- 동적 쿼리 실행 구문 -->
        <where>
        
        	<!-- 신청일자 범위 -->
        	<if test="startDate != '' and startDate != null and endDate != '' and endDate != null">
        		<![CDATA[
               (DATE_FORMAT(A.START_TIME, '%Y-%m-%d') >= #{startDate}      	
           AND DATE_FORMAT(A.END_TIME, '%Y-%m-%d') <= #{endDate})
           		]]>
           	</if>
           	
           	<!-- 신청자 아이디 -->
           	<if test="keyword != '' and keyword != null">
           AND INSTR(B.LOGIN_ID, #{keyword}) > 0
           	</if>
           	
        </where>
        
         ORDER BY ORDER_INFO_UID DESC;         
    </select>
    
    <!-- 창고 신청 상세 내역 조회 쿼리 -->
    <select id="getWarehouseDetail" resultType="WarehouseDTO">
        SELECT IFNULL(A.ORDER_INFO_UID, '-')                        ORDER_INFO_UID
             , IFNULL(C.LOGIN_ID, '-')                              LOGIN_ID
             , IFNULL(A.COMPANY_UID, '-')                           COMPANY_UID
             , IFNULL(A.SIZE, '-')                                  SIZE
             , ( 
                 CASE A.STATUS
                 WHEN '0' THEN '예약'
                 WHEN '1' THEN '결제완료'
                 WHEN '2' THEN '입고전'
                 WHEN '3' THEN '입고'
                 WHEN '4' THEN '부분출고'
                 WHEN '5' THEN '출고'
                 WHEN '6' THEN '기간만료'
                 ELSE '-' END
               )                                                    STATUS
             , DATE_FORMAT(A.START_TIME, '%Y.%m.%d %H:%i')          START_TIME
             , DATE_FORMAT(A.END_TIME, '%Y.%m.%d %H:%i')            END_TIME
             , DATE_FORMAT(A.REQUEST_TIME, '%Y.%m.%d %H:%i:%s')     REQUEST_TIME
             , IFNULL(A.PRICE, 0)                                   PRICE
             , (
                 CASE A.PAY_TYPE
                 WHEN 'P' THEN '페이코'
                 WHEN 'Z' THEN '제로페이'
                 ELSE '-' END
               )                                                    PAY_TYPE
             , IFNULL(A.IS_PAY, '-')                                IS_PAY
             , IFNULL(A.SELLERORDERREFERENCEKEY, '-')               SELLERORDERREFERENCEKEY
             , IFNULL(A.WAREHOUSE_UID, '-')                         WAREHOUSE_UID
             , IFNULL(B.APPROVAL_UID, '-')                          APPROVAL_UID
             , IFNULL(B.ORDERRETURNURL, '-')					    ORDERRETURNURL
             , IFNULL(B.ORDERNO, '-')							    ORDERNO
             , IFNULL(B.ORDERCHANNEL, '-')							ORDERCHANNEL
             , IFNULL(B.TOTALORDERAMT, 0)				            TOTALORDERAMT
             , IFNULL(B.TOTALPAYMENTAMT, 0)			                TOTALPAYMENTAMT
             , IFNULL(B.PAYMENTCOMPLETIONYN, '-')					PAYMENTCOMPLETIONYN
             , IFNULL(B.ORDERCERTIFYKEY, '-')						ORDERCERTIFYKEY
             , IFNULL(B.PAYMENTTRADENO, '-')						PAYMENTTRADENO
             , IFNULL(B.PAYMENTMETHODCODE, '-')						PAYMENTMETHODCODE
             , IFNULL(B.PAYMENTMETHODNAME, '-')						PAYMENTMETHODNAME
             , IFNULL(B.TRADEYMDT, '-')								TRADEYMDT
             , IFNULL(B.PGADMISSIONNO, '-')							PGADMISSIONNO
             , IFNULL(B.PGADMISSIONYMDT, '-')						PGADMISSIONYMDT
             , IF(B.IS_CANCEL IS NULL, 'N', 'Y')					IS_CANCEL
             , IFNULL(B.TOTALCANCELPOSSIBLEAMT, 0)				    TOTALCANCELPOSSIBLEAMT
             , IFNULL(B.CANCEL_MEMO, '-')							CANCEL_MEMO
          FROM warehouse_order_info A
          LEFT OUTER JOIN
               seller_approval B
            ON A.SELLERORDERREFERENCEKEY = B.SELLERORDERREFERENCEKEY
         INNER JOIN
               user C
            ON A.USER_UID = C.USER_UID
         WHERE A.ORDER_INFO_UID = #{orderInfoUid};
    </select>
    
    <!-- 물류 신청 내역 조회 쿼리 -->
    <select id="getLogisList" resultType="LogisDTO">
    	SELECT IFNULL(A.LOGIS_ORDER_UID, '-')                 LOGIS_ORDER_UID
             , IFNULL(B.LOGIN_ID, '-')                        LOGIN_ID
             , DATE_FORMAT(A.START_TIME, '%Y.%m.%d %H:%i')    START_TIME
             , DATE_FORMAT(A.ARRIVE_TIME, '%Y.%m.%d %H:%i')   ARRIVE_TIME
             , IFNULL(A.PRICE, 0)                             PRICE
          FROM logis_order_info A
         INNER JOIN
               user B
            ON A.USER_UID = B.USER_UID
        
        <!-- 동적 쿼리 실행 구문 -->
        <where>
        
        	<!-- 신청일자 범위 -->
        	<if test="startDate != '' and startDate != null and endDate != '' and endDate != null">
        		<![CDATA[
               (DATE_FORMAT(A.START_TIME, '%Y-%m-%d') >= #{startDate}     	
           AND DATE_FORMAT(A.ARRIVE_TIME, '%Y-%m-%d') <= #{endDate})
           		]]>
           	</if>
           	
           	<!-- 신청자 아이디 -->
           	<if test="keyword != '' and keyword != null">
           AND INSTR(B.LOGIN_ID, #{keyword}) > 0
           	</if>
           	
        </where>
        
         ORDER BY LOGIS_ORDER_UID DESC;
    </select>
    
    <!-- 물류 신청 상세 내역 조회 쿼리 -->
    <select id="getLogisDetail" resultType="LogisDTO">
    	SELECT IFNULL(A.LOGIS_ORDER_UID, '-') 							LOGIS_ORDER_UID
             , IFNULL(C.LOGIN_ID, '-')									LOGIN_ID
             , IFNULL(A.SENDER_NAME, '-')								SENDER_NAME
             , IFNULL(A.SENDER_PHONE, '-')								SENDER_PHONE
             , IFNULL(A.SENDER_POSTCODE, '-')							SENDER_POSTCODE
             , IFNULL(A.SENDER_ADDRESS, '-')							SENDER_ADDRESS
             , IFNULL(A.RECEIVER_NAME, '-')								RECEIVER_NAME
             , IFNULL(A.RECEIVER_PHONE, '-')							RECEIVER_PHONE
             , IFNULL(A.RECEIVER_POSTCODE, '-')							RECEIVER_POSTCODE
             , IFNULL(A.RECEIVER_ADDRESS, '-')							RECEIVER_ADDRESS
             , DATE_FORMAT(A.START_TIME, '%Y.%m.%d %H:%i')				START_TIME
             , DATE_FORMAT(A.ARRIVE_TIME, '%Y.%m.%d %H:%i')				ARRIVE_TIME
             , IFNULL(A.BOX_COUNT, 0)									BOX_COUNT
             , IFNULL(A.PALETTE_COUNT, 0)								PALETTE_COUNT
             , DATE_FORMAT(A.WISH_DELIVERY_DATETIME, '%Y.%m.%d %H:%i')	WISH_DELIVERY_DATETIME
             , DATE_FORMAT(A.REQUEST_TIME, '%Y.%m.%d %H:%i:%s')			REQUEST_TIME
             , (
                 CASE A.STATUS
                 WHEN '0' THEN '신청'
                 WHEN '1' THEN '결제완료'
                 WHEN '2' THEN '담당자 배정완료'
                 WHEN '3' THEN '상품인수'
                 WHEN '4' THEN '배송시작'
                 WHEN '5' THEN '배송완료'
                 WHEN '6' THEN '예약취소'
                 ELSE '-' END
               )														STATUS
             , IFNULL(A.PRICE, 0)										PRICE
             , IFNULL(A.IS_PAY, '-')									IS_PAY
             , (
                 CASE A.PAY_TYPE
                 WHEN 'P' THEN '페이코'
                 WHEN 'Z' THEN '제로페이'
                 ELSE '-' END
               )														PAY_TYPE
             , (
                 CASE A.LOGIS_TYPE
                 WHEN '0' THEN '일반배송'
                 WHEN '1' THEN '일반-공유창고 배송'
                 WHEN '2' THEN '공유창고-일반배송'
                 WHEN '3' THEN '일반배송+공유배송'
                 ELSE '-' END
               )														LOGIS_TYPE
             , IFNULL(A.ITEM_INFO, '-')									ITEM_INFO
             , IFNULL(A.LOGIS_NUMBER, '-')								LOGIS_NUMBER
             , IFNULL(A.SELLERORDERREFERENCEKEY, '-')					SELLERORDERREFERENCEKEY
             , IFNULL(B.APPROVAL_UID, '-')                          	APPROVAL_UID
             , IFNULL(B.ORDERRETURNURL, '-')					    	ORDERRETURNURL
             , IFNULL(B.ORDERNO, '-')							    	ORDERNO
             , IFNULL(B.ORDERCHANNEL, '-')								ORDERCHANNEL
             , IFNULL(B.TOTALORDERAMT, 0)				            	TOTALORDERAMT
             , IFNULL(B.TOTALPAYMENTAMT, 0)			                	TOTALPAYMENTAMT
             , IFNULL(B.PAYMENTCOMPLETIONYN, '-')						PAYMENTCOMPLETIONYN
             , IFNULL(B.ORDERCERTIFYKEY, '-')							ORDERCERTIFYKEY
             , IFNULL(B.PAYMENTTRADENO, '-')							PAYMENTTRADENO
             , IFNULL(B.PAYMENTMETHODCODE, '-')							PAYMENTMETHODCODE
             , IFNULL(B.PAYMENTMETHODNAME, '-')							PAYMENTMETHODNAME
             , IFNULL(B.TRADEYMDT, '-')									TRADEYMDT
             , IFNULL(B.PGADMISSIONNO, '-')								PGADMISSIONNO
             , IFNULL(B.PGADMISSIONYMDT, '-')							PGADMISSIONYMDT
             , IF(B.IS_CANCEL IS NULL, 'N', 'Y')						IS_CANCEL
             , IFNULL(B.TOTALCANCELPOSSIBLEAMT, 0)				    	TOTALCANCELPOSSIBLEAMT
             , IFNULL(B.CANCEL_MEMO, '-')								CANCEL_MEMO
          FROM logis_order_info A
          LEFT OUTER JOIN
               seller_approval B
            ON A.SELLERORDERREFERENCEKEY = B.SELLERORDERREFERENCEKEY
         INNER JOIN
               user C
            ON A.USER_UID = C.USER_UID
         WHERE A.LOGIS_ORDER_UID = #{logisOrderUid};
    </select>

</mapper>